// Generated by CoffeeScript 1.12.4

/*
Copyright 2016 Resin.io

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

	 http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
 */
module.exports = {
  signature: 'promote [deviceIp]',
  description: 'Promote a resinOS device',
  help: 'Use this command to promote your device.\n\nPromoting a device will provision it onto the Resin platform,\nconverting it from an unmanaged device to a managed device.\n\nExamples:\n\n	$ rdt promote\n	$ rdt promote --port 22222\n	$ rdt promote --verbose',
  primary: true,
  options: [
    {
      signature: 'verbose',
      boolean: true,
      description: 'increase verbosity',
      alias: 'v'
    }, {
      signature: 'port',
      parameter: 'port',
      description: 'ssh port number (default: 22222)',
      alias: 'p'
    }
  ],
  action: function(params, options, done) {
    var Promise, _, child_process, common, forms, verbose;
    child_process = require('child_process');
    Promise = require('bluebird');
    _ = require('lodash');
    forms = require('resin-sync').forms;
    common = require('../utils').common;
    if (options.port == null) {
      options.port = 22222;
    }
    verbose = options.verbose ? '-vvv' : '';
    return Promise["try"](function() {
      return params.deviceIp != null ? params.deviceIp : params.deviceIp = forms.selectLocalResinOsDevice();
    }).then(function(deviceIp) {
      var command, subShellCommand;
      _.assign(options, {
        deviceIp: deviceIp
      });
      command = "ssh " + verbose + " -t -p " + options.port + " -o LogLevel=ERROR -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null -o ControlMaster=no root@" + options.deviceIp + " -- \"resin-provision\"";
      subShellCommand = common.getSubShellCommand(command);
      return child_process.spawn(subShellCommand.program, subShellCommand.args, {
        stdio: 'inherit'
      });
    }).nodeify(done);
  }
};
